# Use common base images built from Dockerfile.base
FROM gam-base:builder AS builder

ENV VIRTUAL_ENV=/opt/venv
ENV PATH="/opt/venv/bin:${PATH}"
WORKDIR /app

# Install only manifests first for caching
COPY requirements.txt pyproject.toml ./

# Primary path: requirements.txt present
RUN if [ -f "requirements.txt" ]; then \
      pip install --no-cache-dir -r requirements.txt ; \
    fi

# Dashboard requires Streamlit and visualization extras if not already included
RUN pip install --no-cache-dir streamlit

# Copy source and install project
COPY . /app
RUN pip install --no-cache-dir -e .

# ---------- Runtime with GUI libraries ----------
FROM gam-base:runtime-gui AS runtime

ENV VIRTUAL_ENV=/opt/venv
ENV PATH="/opt/venv/bin:${PATH}"
WORKDIR /app

# Prepare writable locations consistent with compose volumes
USER root
RUN mkdir -p /app/results && chown -R gam:gam /app
USER gam

# Bring in the prebuilt venv and source tree from builder
COPY --from=builder /opt/venv /opt/venv
COPY --from=builder --chown=gam:gam /app /app

EXPOSE 8501

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8501/healthz || exit 1

CMD ["/bin/bash", "deployment/docker/start-dashboard.sh"]