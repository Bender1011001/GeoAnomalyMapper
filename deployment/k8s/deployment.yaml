apiVersion: apps/v1
kind: Deployment
metadata:
  name: gam-deployment
  namespace: gam-system
  labels:
    app: geoanomalymapper
    component: gam
    environment: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: geoanomalymapper
  template:
    metadata:
      labels:
        app: geoanomalymapper
        component: gam
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - geoanomalymapper
              topologyKey: kubernetes.io/hostname
      containers:
      - name: gam
        image: gam:latest  # Replace with registry path, e.g., docker.io/yourrepo/gam:v0.1.0
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          gam --config /app/config/production.yaml run --daemon
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: GAM_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: gam-secrets
              key: database-url
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
          limits:
            memory: "8Gi"
            cpu: "4"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /app/data
        - name: cache-volume
          mountPath: /app/cache
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config-volume
        configMap:
          name: gam-config
          defaultMode: 0644
      - name: data-volume
        persistentVolumeClaim:
          claimName: gam-data-pvc
      - name: cache-volume
        persistentVolumeClaim:
          claimName: gam-cache-pvc
      nodeSelector:
        node.kubernetes.io/instance-type: m5.large  # Optimize for compute-intensive workloads
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "gam"
        effect: "NoSchedule"