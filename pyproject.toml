[tool.poetry]
name = "geoanomalymapper"
version = "0.1.0"
description = "A geospatial anomaly detection and mapping tool with Streamlit dashboard"
authors = ["GeoAnomalyMapper Team"]
readme = "README.md"
packages = [{include = "gam"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.26.0"
pandas = "^2.1.0"
scikit-learn = "^1.3.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
plotly = "^5.17.0"
geopandas = "^0.14.0"
rasterio = "^1.3.0"
shapely = "^2.0.0"
pyproj = "^3.6.0"
fiona = "^1.9.0"
xarray = "^2023.8.0"
netcdf4 = "^1.6.0"
requests = "^2.31.0"
pydantic = "^2.4.0"
click = "^8.1.0"
tqdm = "^4.66.0"
joblib = "^1.3.0"
scipy = "^1.11.0"
pillow = "^10.0.0"
imageio = "^2.31.0"
h5py = "^3.9.0"
tables = "^3.8.0"
pyyaml = "^6.0.2"
tenacity = "^8.2.0"
dask = {extras = ["complete"], version = "^2024.8.0"}
sqlalchemy = {version = "^1.4.0", extras = []}  # <2.0.0 via markers if needed

# Optional dependencies for extras
pygmt = {version = "^0.12.0", optional = true}
pyvista = {version = "^0.44.0", optional = true}
folium = {version = "^0.15.0", optional = true}
vtk = {version = "^9.3.0", optional = true}
streamlit = {version = "^1.38.0", optional = true}
streamlit-folium = {version = "^0.17.0", optional = true}
fastapi = {version = "^0.104.0", optional = true}
uvicorn = {version = "^0.24.0", optional = true}
itkwidgets = {version = "^0.13.0", optional = true}
pyvistaqt = {version = "^0.11.0", optional = true}
stpyvista = {version = "^0.1.0", optional = true}
simpeg = {version = "^0.21.0", optional = true}
obspy = {version = "^1.4.0", optional = true}
mintpy = {version = "^1.6.0", optional = true}
pygimli = {version = "^1.5.0", optional = true}
sentinelsat = {version = "^1.0.0", optional = true}

[tool.poetry.extras]
visualization = ["pygmt", "pyvista", "folium", "vtk"]
dashboard = ["streamlit", "streamlit-folium", "fastapi", "uvicorn", "itkwidgets", "pyvistaqt", "stpyvista"]
gui = ["pygmt", "pyvista", "folium", "vtk", "streamlit", "streamlit-folium", "fastapi", "uvicorn", "itkwidgets", "pyvistaqt", "stpyvista"]
geophysics = ["simpeg", "obspy", "mintpy", "pygimli", "sentinelsat"]
all = ["pygmt", "pyvista", "folium", "vtk", "streamlit", "streamlit-folium", "fastapi", "uvicorn", "itkwidgets", "pyvistaqt", "stpyvista", "simpeg", "obspy", "mintpy", "pygimli", "sentinelsat"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"
jupyter = "^1.0.0"
ipykernel = "^6.25.0"
notebook = "^7.0.0"

[tool.poetry.scripts]
gam = "gam.core.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gam"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["gam"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]