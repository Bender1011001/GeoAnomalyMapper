version: 1
disable_existing_loggers: false
formatters:
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s", "module": "%(module)s", "line": "%(lineno)d", "process": "%(process)d", "thread": "%(thread)d", "extra": "%(extra)s"}'
    datefmt: '%Y-%m-%dT%H:%M:%S.%fZ'
  console:
    class: logging.Formatter
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: json
    stream: ext://sys.stdout
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: json
    filename: /var/log/gam/app.log
    maxBytes: 104857600  # 100MB
    backupCount: 30
    encoding: utf8
  errors:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: json
    filename: /var/log/gam/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 7
    encoding: utf8
  sentry:
    class: raven.handlers.logging.SentryHandler
    level: ERROR
    dsn: ${SENTRY_DSN}
    site: gam-production
    include_paths: ['gam.*']
    exclude_paths: ['tests.*', 'docs.*']

root:
  level: INFO
  handlers: [console, file]

loggers:
  gam:
    level: DEBUG
    handlers: [console, file, errors]
    propagate: false
  gam.core:
    level: INFO
    handlers: [console, file]
    propagate: false
  gam.ingestion:
    level: DEBUG
    handlers: [console, file]
    propagate: false
  gam.modeling:
    level: INFO
    handlers: [console, file]
    propagate: false
  requests:
    level: WARNING
    handlers: [console]
    propagate: true
  sqlalchemy:
    level: WARNING
    handlers: [console]
    propagate: true

# Log aggregation (for Fluentd/ELK)
filters:
  context:
    (): gam.core.logging.ContextFilter
    request_id: '%(request_id)s'
    user_id: '%(user_id)s'
    bbox: '%(bbox)s'
    modality: '%(modality)s'

# Error tracking and alerting
sentry:
  dsn: ${SENTRY_DSN}
  environment: production
  release: ${GAM_VERSION}
  tags:
    environment: production
    service: gam